{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "hostadmin"
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "[concat('P', uniqueString(resourceGroup().id), 'x', '#')]"
    },
    "vpnPsk": {
      "type": "string",
      "defaultValue": "vpn"
    },
    "vpnUserName": {
      "type": "string",
      "defaultValue": "vpnuser"
    },
    "vpnUserPassword": {
      "type": "securestring",
      "defaultValue": "[concat('P', uniqueString(resourceGroup().id), 'x', '!')]"
    },
    "networkInterfaceName": {
      "type": "string",
      "defaultValue": "[concat(uniqueString(resourceGroup().id), '-ni')]"
    },
    "networkSecurityGroupName": {
      "type": "string",
      "defaultValue": "[concat(uniqueString(resourceGroup().id), '-nsg')]"
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "[concat(uniqueString(resourceGroup().id), '-vnet')]"
    },
    "publicIpAddressName": {
      "type": "string",
      "defaultValue": "[concat(uniqueString(resourceGroup().id), '-ip')]"
    },
    "virtualMachineName": {
      "type": "string",
      "defaultValue": "[concat(uniqueString(resourceGroup().id), '-vm')]"
    },
    "osDiskType": {
      "type": "string",
      "defaultValue": "Premium_LRS"
    },
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_B1s"
    }
  },
  "variables": {
    "location":  "[resourceGroup().location]",
    "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
    "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', 'default')]",
    "addressPrefixes": [ "172.16.1.0/24" ],
    "subnets": [
      {
        "name": "default",
        "properties": {
          "addressPrefix": "172.16.1.0/24"
        }
      }
    ],
    "commandTemplate": "curl -fsSL https://get.docker.com -o get-docker.sh ; sudo sh get-docker.sh ; sudo docker run -d --privileged --restart unless-stopped -p 500:500/udp -p 4500:4500/udp -p 1701:1701/tcp -p 1194:1194/udp -p 5555:5555/tcp -e PSK=<psk> -e USERS=<username>:<password> -e SPW=<password> -e HPW=<password> siomiz/softethervpn"
  },
  "resources": [
    {
      "name": "[parameters('networkInterfaceName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2019-07-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('nsgId')]"
        }
      }
    },
    {
      "name": "[parameters('networkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-02-01",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "l2tp500",
            "properties": {
              "priority": 1010,
              "protocol": "*",
              "access": "Allow",
              "direction": "Inbound",
              "sourceApplicationSecurityGroups": [],
              "destinationApplicationSecurityGroups": [],
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "500"
            }
          },
          {
            "name": "l2tp4500",
            "properties": {
              "priority": 1020,
              "protocol": "*",
              "access": "Allow",
              "direction": "Inbound",
              "sourceApplicationSecurityGroups": [],
              "destinationApplicationSecurityGroups": [],
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "4500"
            }
          },
          {
            "name": "l2tp1701",
            "properties": {
              "priority": 1030,
              "protocol": "*",
              "access": "Allow",
              "direction": "Inbound",
              "sourceApplicationSecurityGroups": [],
              "destinationApplicationSecurityGroups": [],
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "1701"
            }
          },
          {
            "name": "openvpn1194",
            "properties": {
              "priority": 1040,
              "protocol": "*",
              "access": "Allow",
              "direction": "Inbound",
              "sourceApplicationSecurityGroups": [],
              "destinationApplicationSecurityGroups": [],
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "1194"
            }
          },
          {
            "name": "openvpn5555",
            "properties": {
              "priority": 1050,
              "protocol": "*",
              "access": "Allow",
              "direction": "Inbound",
              "sourceApplicationSecurityGroups": [],
              "destinationApplicationSecurityGroups": [],
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "5555"
            }
          },
          {
            "name": "ssh",
            "properties": {
              "priority": 1000,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Inbound",
              "sourceApplicationSecurityGroups": [],
              "destinationApplicationSecurityGroups": [],
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22"
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('virtualNetworkName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-09-01",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": "[variables('addressPrefixes')]"
        },
        "subnets": "[variables('subnets')]"
      }
    },
    {
      "name": "[parameters('publicIpAddressName')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2019-02-01",
      "location": "[variables('location')]",
      "properties": {
        "publicIpAllocationMethod": "Static"
      },
      "sku": {
        "name": "Standard"
      }
    },
    {
      "name": "[parameters('virtualMachineName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-07-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('osDiskType')]"
            },
            "diskSizeGB": 30
          },
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        }
      }
    },
    {
      "name": "microsoft.custom-script-linux-20200320173122",
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "https://gallery.azure.com/artifact/20161101/microsoft.custom-script-linux-arm.2.0.56/Artifacts/MainTemplate.json"
        },
        "parameters": {
          "vmName": {
            "value": "[parameters('virtualMachineName')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "fileUris": {
            "value": []
          },
          "commandToExecute": {
            "value": "[replace(replace(replace(variables('commandTemplate'), '<password>', parameters('vpnUserPassword')), '<username>', parameters('vpnUserName')), '<psk>', parameters('vpnPsk'))]"
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
      ]
    }
  ],
  "outputs": {
    "admin user name": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    },
    "admin password": {
      "type": "string",
      "value": "[parameters('adminPassword')]"
    },
    "public ip ssh": {
      "value": "[concat(reference(resourceId('Microsoft.Compute/virtualMachines',parameters('virtualMachineName'))).osProfile.adminUsername,'@',reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIpAddressName'))).ipAddress)]",
      "type": "string"
    },
    "vpn server address": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIpAddressName'))).ipAddress]"
    },
    "vpn protocol": {
      "type": "string",
      "value": "L2TP PSK"
    },
    "vpn psk": {
      "type": "string",
      "value": "[parameters('vpnPsk')]"
    },
    "vpn user name": {
      "type": "string",
      "value": "[parameters('vpnUserName')]"
    },
    "vpn user password": {
      "type": "string",
      "value": "[parameters('vpnUserPassword')]"
    }
  }
}